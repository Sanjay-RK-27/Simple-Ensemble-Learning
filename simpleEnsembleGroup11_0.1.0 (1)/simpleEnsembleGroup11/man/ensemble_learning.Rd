% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ensemble.R
\name{ensemble_learning}
\alias{ensemble_learning}
\title{Ensemble Learning}
\usage{
ensemble_learning(X, y, models, weights)
}
\arguments{
\item{X}{Predictor matrix.}

\item{y}{Response variable.}

\item{models}{List of model functions to be combined in the ensemble. The functions should take X and y as input and return a fitted model object.}

\item{weights}{Numeric vector of weights for each model in the ensemble. The weights should sum to 1.}
}
\value{
The ensemble model and the final predictions.
}
\description{
This function performs ensemble learning by combining the predictions of multiple models. It supports both regression and classification tasks by appropriately weighting and aggregating model predictions.
}
\examples{
# Generate sample data for a binary classification problem
n <- 10000 # Number of observations
p <- 10 # Number of predictors
X <- as.matrix(matrix(rnorm(n * p), nrow = n)) # Generate predictor matrix
beta <- c(1, rep(0, p - 1)) # True coefficients (first one is 1, others are 0)
prob <- 1 / (1 + exp(-X \%*\% beta)) # Calculate the probability of the binary outcome
y <- factor(rbinom(n * 1, 1, prob)) # Generate the binary outcome variable

ensemble_model <- ensemble_learning(X, y,
                                    models = list(elastic_net,random_forest),
                                    weights = c(0.3, 0.3, 0.4))

new_predictions <- ensemble_model$final_predictions

print(head(new_predictions,100))
}
