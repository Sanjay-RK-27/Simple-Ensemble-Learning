% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/models.R
\name{logistic_regression}
\alias{logistic_regression}
\title{Logistic Regression}
\usage{
logistic_regression(
  X,
  y,
  bagging = FALSE,
  family = "binomial",
  prescreen = FALSE,
  alpha = 0.5,
  lambda = 0.1
)
}
\arguments{
\item{X}{Predictor matrix.}

\item{y}{Response variable.}

\item{bagging}{Logical indicating whether to perform bagging.}

\item{prescreen}{Logical indicating whether to pre-screen predictors.}

\item{alpha}{Ridge/lasso mixing parameter (0 for ridge, 1 for lasso).}

\item{lambda}{Regularization parameter.}
}
\value{
The fitted logistic regression model.
}
\description{
The logistic_regression function implements logistic regression using the glmnet package. Logistic regression is a widely used statistical model for binary classification problems, where the goal is to predict a binary outcome (e.g., 0 or 1, success or failure) based on a set of predictor variables.
}
\examples{
#'# Generate sample data for a binary classification problem
n <- 100 # Number of observations
p <- 10 # Number of predictors
X <- as.matrix(matrix(rnorm(n * p), nrow = n)) # Generate predictor matrix
beta <- c(1, rep(0, p - 1)) # True coefficients (first one is 1, others are 0)
prob <- 1 / (1 + exp(-X \%*\% beta)) # Calculate the probability of the binary outcome
y <- factor(rbinom(n * 1, 1, prob)) # Generate the binary outcome variable
## Logistic regression without bagging or prescreening
# Fit the logistic regression model without bagging or prescreening
model1 <- logistic_regression(X, y, bagging = FALSE, prescreen = FALSE, alpha = 0, lambda = 0.1)
# Make predictions on the original data
predictions1 <- predict(model1, newx = X)

print(head(predictions1))


}
