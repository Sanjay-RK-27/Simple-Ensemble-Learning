% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/models.R
\name{random_forest}
\alias{random_forest}
\title{Random Forest}
\usage{
random_forest(
  X,
  y,
  prescreen = FALSE,
  is_binary = TRUE,
  ntree = 500,
  mtry = NULL
)
}
\arguments{
\item{X}{Predictor matrix.}

\item{y}{Response variable.}

\item{prescreen}{Logical indicating whether to pre-screen predictors.}

\item{is_binary}{Logical indicating whether the response variable is binary (classification) or continuous (regression).}

\item{ntree}{Number of trees to grow (default is 500).}

\item{mtry}{Number of variables randomly sampled as candidates at each split (default is square root of number of predictors for classification, and one-third for regression).}
}
\value{
The fitted random forest model.
}
\description{
The random_forest function implements random forest for regression or classification using the randomForest package. Random forest is an ensemble learning method that combines multiple decision trees to improve the accuracy and stability of the predictions.
}
\examples{
#' # Generate sample data for a random Forest problem
n <- 100 # Number of observations
p <- 10 # Number of predictors
X <- as.matrix(matrix(rnorm(n * p), nrow = n)) # Generate predictor matrix
beta <- c(1, rep(0, p - 1)) # True coefficients (first one is 1, others are 0)
y <- X \%*\% beta + rnorm(n) # Generate the response variable
## Random Forest without bagging or prescreening
# Fit the Random Forest regression model without bagging or prescreening
model1 <- random_forest(X, as.vector(y), prescreen = FALSE,is_binary = FALSE )
# Make predictions on the original data
predictions1 <- predict(model1, newx = X)
print(head(predictions1))


}
